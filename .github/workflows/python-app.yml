# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Set environment variables
      run: |
        export PROJECT_ROOT=$(pwd)
        export PYTHONPATH="${PROJECT_ROOT}:${PYTHONPATH}"
        echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
        echo "HOST=${{ secrets.HOST }}" >> $GITHUB_ENV
        echo "DATABASE=${{ secrets.DATABASE }}" >> $GITHUB_ENV
        echo "USERNAME_DB=${{ secrets.USERNAME_DB }}" >> $GITHUB_ENV
        echo "PASSWORD=${{ secrets.PASSWORD }}" >> $GITHUB_ENV
        echo "TOKEN_TELEGRAM=${{ secrets.TOKEN_TELEGRAM }}" >> $GITHUB_ENV
        echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> $GITHUB_ENV
        echo "TOPIC=${{ secrets.TOPIC }}" >> $GITHUB_ENV
        echo "ID=${{ secrets.ID }}" >> $GITHUB_ENV
    - name: Install dependencies
      env:
        PYTHONPATH: ${{ env.PYTHONPATH }}
        HOST: ${{ env.HOST }}
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      env:
        PYTHONPATH: ${{ env.PYTHONPATH }}
        HOST: ${{ env.HOST }}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        PYTHONPATH: ${{ env.PYTHONPATH }}
        HOST: ${{ env.HOST }}
      run: |
        pytest
